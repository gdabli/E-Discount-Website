#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E_Discount.DB_Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using System.Configuration;
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EDiscount")]
	public partial class SQL_Server_ModelDataContext : System.Data.Linq.DataContext
	{

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
        private static string connection = ConfigurationManager.ConnectionStrings["E-Discount-DBConnection"].ConnectionString;
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADDRESS(ADDRESS instance);
    partial void UpdateADDRESS(ADDRESS instance);
    partial void DeleteADDRESS(ADDRESS instance);
    partial void InsertUSER_CATEGORY(USER_CATEGORY instance);
    partial void UpdateUSER_CATEGORY(USER_CATEGORY instance);
    partial void DeleteUSER_CATEGORY(USER_CATEGORY instance);
    partial void InsertCATEGORY(CATEGORY instance);
    partial void UpdateCATEGORY(CATEGORY instance);
    partial void DeleteCATEGORY(CATEGORY instance);
    partial void InsertLOCATION(LOCATION instance);
    partial void UpdateLOCATION(LOCATION instance);
    partial void DeleteLOCATION(LOCATION instance);
    partial void InsertSTORE_CATEGORY(STORE_CATEGORY instance);
    partial void UpdateSTORE_CATEGORY(STORE_CATEGORY instance);
    partial void DeleteSTORE_CATEGORY(STORE_CATEGORY instance);
    partial void InsertPERIOD(PERIOD instance);
    partial void UpdatePERIOD(PERIOD instance);
    partial void DeletePERIOD(PERIOD instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    partial void InsertFEEDBACK(FEEDBACK instance);
    partial void UpdateFEEDBACK(FEEDBACK instance);
    partial void DeleteFEEDBACK(FEEDBACK instance);
    partial void InsertSTORE(STORE instance);
    partial void UpdateSTORE(STORE instance);
    partial void DeleteSTORE(STORE instance);
    partial void InsertDISCOUNT(DISCOUNT instance);
    partial void UpdateDISCOUNT(DISCOUNT instance);
    partial void DeleteDISCOUNT(DISCOUNT instance);
    #endregion
		
		public SQL_Server_ModelDataContext() : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQL_Server_ModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQL_Server_ModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQL_Server_ModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SQL_Server_ModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADDRESS> ADDRESSes
		{
			get
			{
				return this.GetTable<ADDRESS>();
			}
		}
		
		public System.Data.Linq.Table<USER_CATEGORY> USER_CATEGORies
		{
			get
			{
				return this.GetTable<USER_CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<LOCATION> LOCATIONs
		{
			get
			{
				return this.GetTable<LOCATION>();
			}
		}
		
		public System.Data.Linq.Table<STORE_CATEGORY> STORE_CATEGORies
		{
			get
			{
				return this.GetTable<STORE_CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<PERIOD> PERIODs
		{
			get
			{
				return this.GetTable<PERIOD>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		public System.Data.Linq.Table<FEEDBACK> FEEDBACKs
		{
			get
			{
				return this.GetTable<FEEDBACK>();
			}
		}
		
		public System.Data.Linq.Table<STORE> STOREs
		{
			get
			{
				return this.GetTable<STORE>();
			}
		}
		
		public System.Data.Linq.Table<DISCOUNT> DISCOUNTs
		{
			get
			{
				return this.GetTable<DISCOUNT>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCategories")]
		public ISingleResult<CATEGORY_VIEWER> GetCategories()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CATEGORY_VIEWER>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNearbyStoresByCategory")]
		public ISingleResult<STORE_VIEWER> GetNearbyStoresByCategory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> latitude, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> longitude, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> radius, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> catCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> maxReturns)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), latitude, longitude, radius, catCode, maxReturns);
			return ((ISingleResult<STORE_VIEWER>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStoresByOwner")]
		public ISingleResult<STORE_INFO> GetStoresByOwner([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<STORE_INFO>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetUser")]
		public ISingleResult<USER_VIEWER> GetUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<USER_VIEWER>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADDRESS")]
	public partial class ADDRESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ADDRESS_ID;
		
		private string _ADDRESS_LINE1;
		
		private string _ADDRESS_LINE2;
		
		private string _CITY;
		
		private string _STATE_PROVINCE_REGION;
		
		private string _POSTAL_CODE;
		
		private string _COUNTRY;
		
		private EntitySet<STORE> _STOREs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnADDRESS_IDChanging(int value);
    partial void OnADDRESS_IDChanged();
    partial void OnADDRESS_LINE1Changing(string value);
    partial void OnADDRESS_LINE1Changed();
    partial void OnADDRESS_LINE2Changing(string value);
    partial void OnADDRESS_LINE2Changed();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnSTATE_PROVINCE_REGIONChanging(string value);
    partial void OnSTATE_PROVINCE_REGIONChanged();
    partial void OnPOSTAL_CODEChanging(string value);
    partial void OnPOSTAL_CODEChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    #endregion
		
		public ADDRESS()
		{
			this._STOREs = new EntitySet<STORE>(new Action<STORE>(this.attach_STOREs), new Action<STORE>(this.detach_STOREs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ADDRESS_ID
		{
			get
			{
				return this._ADDRESS_ID;
			}
			set
			{
				if ((this._ADDRESS_ID != value))
				{
					this.OnADDRESS_IDChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS_ID = value;
					this.SendPropertyChanged("ADDRESS_ID");
					this.OnADDRESS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_LINE1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ADDRESS_LINE1
		{
			get
			{
				return this._ADDRESS_LINE1;
			}
			set
			{
				if ((this._ADDRESS_LINE1 != value))
				{
					this.OnADDRESS_LINE1Changing(value);
					this.SendPropertyChanging();
					this._ADDRESS_LINE1 = value;
					this.SendPropertyChanged("ADDRESS_LINE1");
					this.OnADDRESS_LINE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_LINE2", DbType="NVarChar(100)")]
		public string ADDRESS_LINE2
		{
			get
			{
				return this._ADDRESS_LINE2;
			}
			set
			{
				if ((this._ADDRESS_LINE2 != value))
				{
					this.OnADDRESS_LINE2Changing(value);
					this.SendPropertyChanging();
					this._ADDRESS_LINE2 = value;
					this.SendPropertyChanged("ADDRESS_LINE2");
					this.OnADDRESS_LINE2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_PROVINCE_REGION", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string STATE_PROVINCE_REGION
		{
			get
			{
				return this._STATE_PROVINCE_REGION;
			}
			set
			{
				if ((this._STATE_PROVINCE_REGION != value))
				{
					this.OnSTATE_PROVINCE_REGIONChanging(value);
					this.SendPropertyChanging();
					this._STATE_PROVINCE_REGION = value;
					this.SendPropertyChanged("STATE_PROVINCE_REGION");
					this.OnSTATE_PROVINCE_REGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTAL_CODE", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string POSTAL_CODE
		{
			get
			{
				return this._POSTAL_CODE;
			}
			set
			{
				if ((this._POSTAL_CODE != value))
				{
					this.OnPOSTAL_CODEChanging(value);
					this.SendPropertyChanging();
					this._POSTAL_CODE = value;
					this.SendPropertyChanged("POSTAL_CODE");
					this.OnPOSTAL_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADDRESS_STORE", Storage="_STOREs", ThisKey="ADDRESS_ID", OtherKey="ADDRESS_ID")]
		public EntitySet<STORE> STOREs
		{
			get
			{
				return this._STOREs;
			}
			set
			{
				this._STOREs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STOREs(STORE entity)
		{
			this.SendPropertyChanging();
			entity.ADDRESS = this;
		}
		
		private void detach_STOREs(STORE entity)
		{
			this.SendPropertyChanging();
			entity.ADDRESS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USER_CATEGORY")]
	public partial class USER_CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USER_ID;
		
		private int _CATEGORY_ID;
		
		private int _COUNT;
		
		private EntityRef<CATEGORY> _CATEGORY;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(string value);
    partial void OnUSER_IDChanged();
    partial void OnCATEGORY_IDChanging(int value);
    partial void OnCATEGORY_IDChanged();
    partial void OnCOUNTChanging(int value);
    partial void OnCOUNTChanged();
    #endregion
		
		public USER_CATEGORY()
		{
			this._CATEGORY = default(EntityRef<CATEGORY>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CATEGORY_ID
		{
			get
			{
				return this._CATEGORY_ID;
			}
			set
			{
				if ((this._CATEGORY_ID != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCATEGORY_IDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY_ID = value;
					this.SendPropertyChanged("CATEGORY_ID");
					this.OnCATEGORY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNT", DbType="Int NOT NULL")]
		public int COUNT
		{
			get
			{
				return this._COUNT;
			}
			set
			{
				if ((this._COUNT != value))
				{
					this.OnCOUNTChanging(value);
					this.SendPropertyChanging();
					this._COUNT = value;
					this.SendPropertyChanged("COUNT");
					this.OnCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_USER_CATEGORY", Storage="_CATEGORY", ThisKey="CATEGORY_ID", OtherKey="CATEGORY_ID", IsForeignKey=true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				CATEGORY previousValue = this._CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORY.Entity = null;
						previousValue.USER_CATEGORies.Remove(this);
					}
					this._CATEGORY.Entity = value;
					if ((value != null))
					{
						value.USER_CATEGORies.Add(this);
						this._CATEGORY_ID = value.CATEGORY_ID;
					}
					else
					{
						this._CATEGORY_ID = default(int);
					}
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_USER_CATEGORY", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.USER_CATEGORies.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.USER_CATEGORies.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(string);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CATEGORY_ID;
		
		private string _NAME;
		
		private string _DESCRIPTION;
		
		private int _LAYER;
		
		private int _PARENT;
		
		private EntitySet<USER_CATEGORY> _USER_CATEGORies;
		
		private EntitySet<STORE_CATEGORY> _STORE_CATEGORies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCATEGORY_IDChanging(int value);
    partial void OnCATEGORY_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnLAYERChanging(int value);
    partial void OnLAYERChanged();
    partial void OnPARENTChanging(int value);
    partial void OnPARENTChanged();
    #endregion
		
		public CATEGORY()
		{
			this._USER_CATEGORies = new EntitySet<USER_CATEGORY>(new Action<USER_CATEGORY>(this.attach_USER_CATEGORies), new Action<USER_CATEGORY>(this.detach_USER_CATEGORies));
			this._STORE_CATEGORies = new EntitySet<STORE_CATEGORY>(new Action<STORE_CATEGORY>(this.attach_STORE_CATEGORies), new Action<STORE_CATEGORY>(this.detach_STORE_CATEGORies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CATEGORY_ID
		{
			get
			{
				return this._CATEGORY_ID;
			}
			set
			{
				if ((this._CATEGORY_ID != value))
				{
					this.OnCATEGORY_IDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY_ID = value;
					this.SendPropertyChanged("CATEGORY_ID");
					this.OnCATEGORY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(1000)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAYER", DbType="Int NOT NULL")]
		public int LAYER
		{
			get
			{
				return this._LAYER;
			}
			set
			{
				if ((this._LAYER != value))
				{
					this.OnLAYERChanging(value);
					this.SendPropertyChanging();
					this._LAYER = value;
					this.SendPropertyChanged("LAYER");
					this.OnLAYERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENT", DbType="Int NOT NULL")]
		public int PARENT
		{
			get
			{
				return this._PARENT;
			}
			set
			{
				if ((this._PARENT != value))
				{
					this.OnPARENTChanging(value);
					this.SendPropertyChanging();
					this._PARENT = value;
					this.SendPropertyChanged("PARENT");
					this.OnPARENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_USER_CATEGORY", Storage="_USER_CATEGORies", ThisKey="CATEGORY_ID", OtherKey="CATEGORY_ID")]
		public EntitySet<USER_CATEGORY> USER_CATEGORies
		{
			get
			{
				return this._USER_CATEGORies;
			}
			set
			{
				this._USER_CATEGORies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_STORE_CATEGORY", Storage="_STORE_CATEGORies", ThisKey="CATEGORY_ID", OtherKey="CATEGORY_ID")]
		public EntitySet<STORE_CATEGORY> STORE_CATEGORies
		{
			get
			{
				return this._STORE_CATEGORies;
			}
			set
			{
				this._STORE_CATEGORies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USER_CATEGORies(USER_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = this;
		}
		
		private void detach_USER_CATEGORies(USER_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = null;
		}
		
		private void attach_STORE_CATEGORies(STORE_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = this;
		}
		
		private void detach_STORE_CATEGORies(STORE_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOCATION")]
	public partial class LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LOCATION_ID;
		
		private double _LATITUDE;
		
		private double _LONGITUDE;
		
		private EntitySet<STORE> _STOREs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLOCATION_IDChanging(int value);
    partial void OnLOCATION_IDChanged();
    partial void OnLATITUDEChanging(double value);
    partial void OnLATITUDEChanged();
    partial void OnLONGITUDEChanging(double value);
    partial void OnLONGITUDEChanged();
    #endregion
		
		public LOCATION()
		{
			this._STOREs = new EntitySet<STORE>(new Action<STORE>(this.attach_STOREs), new Action<STORE>(this.detach_STOREs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LATITUDE", DbType="Float NOT NULL")]
		public double LATITUDE
		{
			get
			{
				return this._LATITUDE;
			}
			set
			{
				if ((this._LATITUDE != value))
				{
					this.OnLATITUDEChanging(value);
					this.SendPropertyChanging();
					this._LATITUDE = value;
					this.SendPropertyChanged("LATITUDE");
					this.OnLATITUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LONGITUDE", DbType="Float NOT NULL")]
		public double LONGITUDE
		{
			get
			{
				return this._LONGITUDE;
			}
			set
			{
				if ((this._LONGITUDE != value))
				{
					this.OnLONGITUDEChanging(value);
					this.SendPropertyChanging();
					this._LONGITUDE = value;
					this.SendPropertyChanged("LONGITUDE");
					this.OnLONGITUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_STORE", Storage="_STOREs", ThisKey="LOCATION_ID", OtherKey="LOCATION_ID")]
		public EntitySet<STORE> STOREs
		{
			get
			{
				return this._STOREs;
			}
			set
			{
				this._STOREs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STOREs(STORE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_STOREs(STORE entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STORE_CATEGORY")]
	public partial class STORE_CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STORE_ID;
		
		private int _CATEGORY_ID;
		
		private EntityRef<CATEGORY> _CATEGORY;
		
		private EntityRef<STORE> _STORE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTORE_IDChanging(int value);
    partial void OnSTORE_IDChanged();
    partial void OnCATEGORY_IDChanging(int value);
    partial void OnCATEGORY_IDChanged();
    #endregion
		
		public STORE_CATEGORY()
		{
			this._CATEGORY = default(EntityRef<CATEGORY>);
			this._STORE = default(EntityRef<STORE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int STORE_ID
		{
			get
			{
				return this._STORE_ID;
			}
			set
			{
				if ((this._STORE_ID != value))
				{
					if (this._STORE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTORE_IDChanging(value);
					this.SendPropertyChanging();
					this._STORE_ID = value;
					this.SendPropertyChanged("STORE_ID");
					this.OnSTORE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CATEGORY_ID
		{
			get
			{
				return this._CATEGORY_ID;
			}
			set
			{
				if ((this._CATEGORY_ID != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCATEGORY_IDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY_ID = value;
					this.SendPropertyChanged("CATEGORY_ID");
					this.OnCATEGORY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_STORE_CATEGORY", Storage="_CATEGORY", ThisKey="CATEGORY_ID", OtherKey="CATEGORY_ID", IsForeignKey=true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				CATEGORY previousValue = this._CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORY.Entity = null;
						previousValue.STORE_CATEGORies.Remove(this);
					}
					this._CATEGORY.Entity = value;
					if ((value != null))
					{
						value.STORE_CATEGORies.Add(this);
						this._CATEGORY_ID = value.CATEGORY_ID;
					}
					else
					{
						this._CATEGORY_ID = default(int);
					}
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STORE_STORE_CATEGORY", Storage="_STORE", ThisKey="STORE_ID", OtherKey="STORE_ID", IsForeignKey=true)]
		public STORE STORE
		{
			get
			{
				return this._STORE.Entity;
			}
			set
			{
				STORE previousValue = this._STORE.Entity;
				if (((previousValue != value) 
							|| (this._STORE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STORE.Entity = null;
						previousValue.STORE_CATEGORies.Remove(this);
					}
					this._STORE.Entity = value;
					if ((value != null))
					{
						value.STORE_CATEGORies.Add(this);
						this._STORE_ID = value.STORE_ID;
					}
					else
					{
						this._STORE_ID = default(int);
					}
					this.SendPropertyChanged("STORE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERIOD")]
	public partial class PERIOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PERIOD_ID;
		
		private int _OPEN_DAY;
		
		private System.TimeSpan _OPEN_TIME;
		
		private System.TimeSpan _CLOSE_TIME;
		
		private int _STORE_ID;
		
		private int _CLOSE_DAY;
		
		private EntityRef<STORE> _STORE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPERIOD_IDChanging(int value);
    partial void OnPERIOD_IDChanged();
    partial void OnOPEN_DAYChanging(int value);
    partial void OnOPEN_DAYChanged();
    partial void OnOPEN_TIMEChanging(System.TimeSpan value);
    partial void OnOPEN_TIMEChanged();
    partial void OnCLOSE_TIMEChanging(System.TimeSpan value);
    partial void OnCLOSE_TIMEChanged();
    partial void OnSTORE_IDChanging(int value);
    partial void OnSTORE_IDChanged();
    partial void OnCLOSE_DAYChanging(int value);
    partial void OnCLOSE_DAYChanged();
    #endregion
		
		public PERIOD()
		{
			this._STORE = default(EntityRef<STORE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PERIOD_ID
		{
			get
			{
				return this._PERIOD_ID;
			}
			set
			{
				if ((this._PERIOD_ID != value))
				{
					this.OnPERIOD_IDChanging(value);
					this.SendPropertyChanging();
					this._PERIOD_ID = value;
					this.SendPropertyChanged("PERIOD_ID");
					this.OnPERIOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPEN_DAY", DbType="Int NOT NULL")]
		public int OPEN_DAY
		{
			get
			{
				return this._OPEN_DAY;
			}
			set
			{
				if ((this._OPEN_DAY != value))
				{
					this.OnOPEN_DAYChanging(value);
					this.SendPropertyChanging();
					this._OPEN_DAY = value;
					this.SendPropertyChanged("OPEN_DAY");
					this.OnOPEN_DAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPEN_TIME", DbType="Time NOT NULL")]
		public System.TimeSpan OPEN_TIME
		{
			get
			{
				return this._OPEN_TIME;
			}
			set
			{
				if ((this._OPEN_TIME != value))
				{
					this.OnOPEN_TIMEChanging(value);
					this.SendPropertyChanging();
					this._OPEN_TIME = value;
					this.SendPropertyChanged("OPEN_TIME");
					this.OnOPEN_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLOSE_TIME", DbType="Time NOT NULL")]
		public System.TimeSpan CLOSE_TIME
		{
			get
			{
				return this._CLOSE_TIME;
			}
			set
			{
				if ((this._CLOSE_TIME != value))
				{
					this.OnCLOSE_TIMEChanging(value);
					this.SendPropertyChanging();
					this._CLOSE_TIME = value;
					this.SendPropertyChanged("CLOSE_TIME");
					this.OnCLOSE_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORE_ID", DbType="Int NOT NULL")]
		public int STORE_ID
		{
			get
			{
				return this._STORE_ID;
			}
			set
			{
				if ((this._STORE_ID != value))
				{
					if (this._STORE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTORE_IDChanging(value);
					this.SendPropertyChanging();
					this._STORE_ID = value;
					this.SendPropertyChanged("STORE_ID");
					this.OnSTORE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLOSE_DAY", DbType="Int NOT NULL")]
		public int CLOSE_DAY
		{
			get
			{
				return this._CLOSE_DAY;
			}
			set
			{
				if ((this._CLOSE_DAY != value))
				{
					this.OnCLOSE_DAYChanging(value);
					this.SendPropertyChanging();
					this._CLOSE_DAY = value;
					this.SendPropertyChanged("CLOSE_DAY");
					this.OnCLOSE_DAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STORE_PERIOD", Storage="_STORE", ThisKey="STORE_ID", OtherKey="STORE_ID", IsForeignKey=true)]
		public STORE STORE
		{
			get
			{
				return this._STORE.Entity;
			}
			set
			{
				STORE previousValue = this._STORE.Entity;
				if (((previousValue != value) 
							|| (this._STORE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STORE.Entity = null;
						previousValue.PERIODs.Remove(this);
					}
					this._STORE.Entity = value;
					if ((value != null))
					{
						value.PERIODs.Add(this);
						this._STORE_ID = value.STORE_ID;
					}
					else
					{
						this._STORE_ID = default(int);
					}
					this.SendPropertyChanged("STORE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USER_ID;
		
		private string _FIRST_NAME;
		
		private string _LAST_NAME;
		
		private string _EMAIL;
		
		private string _PASSWORD;
		
		private string _ROLE;
		
		private string _FACEBOOK_NAME;
		
		private System.DateTime _REGISTER_DATE;
		
		private EntitySet<USER_CATEGORY> _USER_CATEGORies;
		
		private EntitySet<FEEDBACK> _FEEDBACKs;
		
		private EntitySet<STORE> _STOREs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(string value);
    partial void OnUSER_IDChanged();
    partial void OnFIRST_NAMEChanging(string value);
    partial void OnFIRST_NAMEChanged();
    partial void OnLAST_NAMEChanging(string value);
    partial void OnLAST_NAMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnROLEChanging(string value);
    partial void OnROLEChanged();
    partial void OnFACEBOOK_NAMEChanging(string value);
    partial void OnFACEBOOK_NAMEChanged();
    partial void OnREGISTER_DATEChanging(System.DateTime value);
    partial void OnREGISTER_DATEChanged();
    #endregion
		
		public USER()
		{
			this._USER_CATEGORies = new EntitySet<USER_CATEGORY>(new Action<USER_CATEGORY>(this.attach_USER_CATEGORies), new Action<USER_CATEGORY>(this.detach_USER_CATEGORies));
			this._FEEDBACKs = new EntitySet<FEEDBACK>(new Action<FEEDBACK>(this.attach_FEEDBACKs), new Action<FEEDBACK>(this.detach_FEEDBACKs));
			this._STOREs = new EntitySet<STORE>(new Action<STORE>(this.attach_STOREs), new Action<STORE>(this.detach_STOREs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FIRST_NAME
		{
			get
			{
				return this._FIRST_NAME;
			}
			set
			{
				if ((this._FIRST_NAME != value))
				{
					this.OnFIRST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FIRST_NAME = value;
					this.SendPropertyChanged("FIRST_NAME");
					this.OnFIRST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LAST_NAME
		{
			get
			{
				return this._LAST_NAME;
			}
			set
			{
				if ((this._LAST_NAME != value))
				{
					this.OnLAST_NAMEChanging(value);
					this.SendPropertyChanging();
					this._LAST_NAME = value;
					this.SendPropertyChanged("LAST_NAME");
					this.OnLAST_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ROLE
		{
			get
			{
				return this._ROLE;
			}
			set
			{
				if ((this._ROLE != value))
				{
					this.OnROLEChanging(value);
					this.SendPropertyChanging();
					this._ROLE = value;
					this.SendPropertyChanged("ROLE");
					this.OnROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACEBOOK_NAME", DbType="NVarChar(100)")]
		public string FACEBOOK_NAME
		{
			get
			{
				return this._FACEBOOK_NAME;
			}
			set
			{
				if ((this._FACEBOOK_NAME != value))
				{
					this.OnFACEBOOK_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FACEBOOK_NAME = value;
					this.SendPropertyChanged("FACEBOOK_NAME");
					this.OnFACEBOOK_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGISTER_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime REGISTER_DATE
		{
			get
			{
				return this._REGISTER_DATE;
			}
			set
			{
				if ((this._REGISTER_DATE != value))
				{
					this.OnREGISTER_DATEChanging(value);
					this.SendPropertyChanging();
					this._REGISTER_DATE = value;
					this.SendPropertyChanged("REGISTER_DATE");
					this.OnREGISTER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_USER_CATEGORY", Storage="_USER_CATEGORies", ThisKey="USER_ID", OtherKey="USER_ID")]
		public EntitySet<USER_CATEGORY> USER_CATEGORies
		{
			get
			{
				return this._USER_CATEGORies;
			}
			set
			{
				this._USER_CATEGORies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_FEEDBACK", Storage="_FEEDBACKs", ThisKey="USER_ID", OtherKey="USER_ID")]
		public EntitySet<FEEDBACK> FEEDBACKs
		{
			get
			{
				return this._FEEDBACKs;
			}
			set
			{
				this._FEEDBACKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_STORE", Storage="_STOREs", ThisKey="USER_ID", OtherKey="OWNER")]
		public EntitySet<STORE> STOREs
		{
			get
			{
				return this._STOREs;
			}
			set
			{
				this._STOREs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USER_CATEGORies(USER_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_USER_CATEGORies(USER_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_FEEDBACKs(FEEDBACK entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_FEEDBACKs(FEEDBACK entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_STOREs(STORE entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_STOREs(STORE entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FEEDBACK")]
	public partial class FEEDBACK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FEEDBACK_ID;
		
		private double _RATING;
		
		private string _COMMENT;
		
		private int _STORE_ID;
		
		private string _USER_ID;
		
		private System.Nullable<System.DateTime> _RATING_DATE;
		
		private int _IS_LIKED;
		
		private EntityRef<USER> _USER;
		
		private EntityRef<STORE> _STORE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFEEDBACK_IDChanging(int value);
    partial void OnFEEDBACK_IDChanged();
    partial void OnRATINGChanging(double value);
    partial void OnRATINGChanged();
    partial void OnCOMMENTChanging(string value);
    partial void OnCOMMENTChanged();
    partial void OnSTORE_IDChanging(int value);
    partial void OnSTORE_IDChanged();
    partial void OnUSER_IDChanging(string value);
    partial void OnUSER_IDChanged();
    partial void OnRATING_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRATING_DATEChanged();
    partial void OnIS_LIKEDChanging(int value);
    partial void OnIS_LIKEDChanged();
    #endregion
		
		public FEEDBACK()
		{
			this._USER = default(EntityRef<USER>);
			this._STORE = default(EntityRef<STORE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FEEDBACK_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FEEDBACK_ID
		{
			get
			{
				return this._FEEDBACK_ID;
			}
			set
			{
				if ((this._FEEDBACK_ID != value))
				{
					this.OnFEEDBACK_IDChanging(value);
					this.SendPropertyChanging();
					this._FEEDBACK_ID = value;
					this.SendPropertyChanged("FEEDBACK_ID");
					this.OnFEEDBACK_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATING", DbType="Float NOT NULL")]
		public double RATING
		{
			get
			{
				return this._RATING;
			}
			set
			{
				if ((this._RATING != value))
				{
					this.OnRATINGChanging(value);
					this.SendPropertyChanging();
					this._RATING = value;
					this.SendPropertyChanged("RATING");
					this.OnRATINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMMENT", DbType="NVarChar(4000)")]
		public string COMMENT
		{
			get
			{
				return this._COMMENT;
			}
			set
			{
				if ((this._COMMENT != value))
				{
					this.OnCOMMENTChanging(value);
					this.SendPropertyChanging();
					this._COMMENT = value;
					this.SendPropertyChanged("COMMENT");
					this.OnCOMMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORE_ID", DbType="Int NOT NULL")]
		public int STORE_ID
		{
			get
			{
				return this._STORE_ID;
			}
			set
			{
				if ((this._STORE_ID != value))
				{
					if (this._STORE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTORE_IDChanging(value);
					this.SendPropertyChanging();
					this._STORE_ID = value;
					this.SendPropertyChanged("STORE_ID");
					this.OnSTORE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATING_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RATING_DATE
		{
			get
			{
				return this._RATING_DATE;
			}
			set
			{
				if ((this._RATING_DATE != value))
				{
					this.OnRATING_DATEChanging(value);
					this.SendPropertyChanging();
					this._RATING_DATE = value;
					this.SendPropertyChanged("RATING_DATE");
					this.OnRATING_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_LIKED", DbType="Int NOT NULL")]
		public int IS_LIKED
		{
			get
			{
				return this._IS_LIKED;
			}
			set
			{
				if ((this._IS_LIKED != value))
				{
					this.OnIS_LIKEDChanging(value);
					this.SendPropertyChanging();
					this._IS_LIKED = value;
					this.SendPropertyChanged("IS_LIKED");
					this.OnIS_LIKEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_FEEDBACK", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.FEEDBACKs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.FEEDBACKs.Add(this);
						this._USER_ID = value.USER_ID;
					}
					else
					{
						this._USER_ID = default(string);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STORE_FEEDBACK", Storage="_STORE", ThisKey="STORE_ID", OtherKey="STORE_ID", IsForeignKey=true)]
		public STORE STORE
		{
			get
			{
				return this._STORE.Entity;
			}
			set
			{
				STORE previousValue = this._STORE.Entity;
				if (((previousValue != value) 
							|| (this._STORE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STORE.Entity = null;
						previousValue.FEEDBACKs.Remove(this);
					}
					this._STORE.Entity = value;
					if ((value != null))
					{
						value.FEEDBACKs.Add(this);
						this._STORE_ID = value.STORE_ID;
					}
					else
					{
						this._STORE_ID = default(int);
					}
					this.SendPropertyChanged("STORE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STORE")]
	public partial class STORE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STORE_ID;
		
		private string _NAME;
		
		private string _DESCRIPTION;
		
		private string _PHONE;
		
		private string _OWNER;
		
		private int _POPULAR;
		
		private double _RATING;
		
		private string _WEBSITE;
		
		private string _PLACE_ID;
		
		private int _PRICE_LEVEL;
		
		private string _GOOGLE_URL;
		
		private int _ADDRESS_ID;
		
		private int _LOCATION_ID;
		
		private EntitySet<STORE_CATEGORY> _STORE_CATEGORies;
		
		private EntitySet<PERIOD> _PERIODs;
		
		private EntitySet<FEEDBACK> _FEEDBACKs;
		
		private EntitySet<DISCOUNT> _DISCOUNTs;
		
		private EntityRef<ADDRESS> _ADDRESS;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTORE_IDChanging(int value);
    partial void OnSTORE_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnOWNERChanging(string value);
    partial void OnOWNERChanged();
    partial void OnPOPULARChanging(int value);
    partial void OnPOPULARChanged();
    partial void OnRATINGChanging(double value);
    partial void OnRATINGChanged();
    partial void OnWEBSITEChanging(string value);
    partial void OnWEBSITEChanged();
    partial void OnPLACE_IDChanging(string value);
    partial void OnPLACE_IDChanged();
    partial void OnPRICE_LEVELChanging(int value);
    partial void OnPRICE_LEVELChanged();
    partial void OnGOOGLE_URLChanging(string value);
    partial void OnGOOGLE_URLChanged();
    partial void OnADDRESS_IDChanging(int value);
    partial void OnADDRESS_IDChanged();
    partial void OnLOCATION_IDChanging(int value);
    partial void OnLOCATION_IDChanged();
    #endregion
		
		public STORE()
		{
			this._STORE_CATEGORies = new EntitySet<STORE_CATEGORY>(new Action<STORE_CATEGORY>(this.attach_STORE_CATEGORies), new Action<STORE_CATEGORY>(this.detach_STORE_CATEGORies));
			this._PERIODs = new EntitySet<PERIOD>(new Action<PERIOD>(this.attach_PERIODs), new Action<PERIOD>(this.detach_PERIODs));
			this._FEEDBACKs = new EntitySet<FEEDBACK>(new Action<FEEDBACK>(this.attach_FEEDBACKs), new Action<FEEDBACK>(this.detach_FEEDBACKs));
			this._DISCOUNTs = new EntitySet<DISCOUNT>(new Action<DISCOUNT>(this.attach_DISCOUNTs), new Action<DISCOUNT>(this.detach_DISCOUNTs));
			this._ADDRESS = default(EntityRef<ADDRESS>);
			this._LOCATION = default(EntityRef<LOCATION>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STORE_ID
		{
			get
			{
				return this._STORE_ID;
			}
			set
			{
				if ((this._STORE_ID != value))
				{
					this.OnSTORE_IDChanging(value);
					this.SendPropertyChanging();
					this._STORE_ID = value;
					this.SendPropertyChanged("STORE_ID");
					this.OnSTORE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(4000)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(20)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OWNER", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OWNER
		{
			get
			{
				return this._OWNER;
			}
			set
			{
				if ((this._OWNER != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOWNERChanging(value);
					this.SendPropertyChanging();
					this._OWNER = value;
					this.SendPropertyChanged("OWNER");
					this.OnOWNERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POPULAR", DbType="Int NOT NULL")]
		public int POPULAR
		{
			get
			{
				return this._POPULAR;
			}
			set
			{
				if ((this._POPULAR != value))
				{
					this.OnPOPULARChanging(value);
					this.SendPropertyChanging();
					this._POPULAR = value;
					this.SendPropertyChanged("POPULAR");
					this.OnPOPULARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATING", DbType="Float NOT NULL")]
		public double RATING
		{
			get
			{
				return this._RATING;
			}
			set
			{
				if ((this._RATING != value))
				{
					this.OnRATINGChanging(value);
					this.SendPropertyChanging();
					this._RATING = value;
					this.SendPropertyChanged("RATING");
					this.OnRATINGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEBSITE", DbType="NVarChar(1000)")]
		public string WEBSITE
		{
			get
			{
				return this._WEBSITE;
			}
			set
			{
				if ((this._WEBSITE != value))
				{
					this.OnWEBSITEChanging(value);
					this.SendPropertyChanging();
					this._WEBSITE = value;
					this.SendPropertyChanged("WEBSITE");
					this.OnWEBSITEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLACE_ID", DbType="NVarChar(50)")]
		public string PLACE_ID
		{
			get
			{
				return this._PLACE_ID;
			}
			set
			{
				if ((this._PLACE_ID != value))
				{
					this.OnPLACE_IDChanging(value);
					this.SendPropertyChanging();
					this._PLACE_ID = value;
					this.SendPropertyChanged("PLACE_ID");
					this.OnPLACE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_LEVEL", DbType="Int NOT NULL")]
		public int PRICE_LEVEL
		{
			get
			{
				return this._PRICE_LEVEL;
			}
			set
			{
				if ((this._PRICE_LEVEL != value))
				{
					this.OnPRICE_LEVELChanging(value);
					this.SendPropertyChanging();
					this._PRICE_LEVEL = value;
					this.SendPropertyChanged("PRICE_LEVEL");
					this.OnPRICE_LEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GOOGLE_URL", DbType="NVarChar(200)")]
		public string GOOGLE_URL
		{
			get
			{
				return this._GOOGLE_URL;
			}
			set
			{
				if ((this._GOOGLE_URL != value))
				{
					this.OnGOOGLE_URLChanging(value);
					this.SendPropertyChanging();
					this._GOOGLE_URL = value;
					this.SendPropertyChanged("GOOGLE_URL");
					this.OnGOOGLE_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_ID", DbType="Int NOT NULL")]
		public int ADDRESS_ID
		{
			get
			{
				return this._ADDRESS_ID;
			}
			set
			{
				if ((this._ADDRESS_ID != value))
				{
					if (this._ADDRESS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnADDRESS_IDChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS_ID = value;
					this.SendPropertyChanged("ADDRESS_ID");
					this.OnADDRESS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION_ID", DbType="Int NOT NULL")]
		public int LOCATION_ID
		{
			get
			{
				return this._LOCATION_ID;
			}
			set
			{
				if ((this._LOCATION_ID != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLOCATION_IDChanging(value);
					this.SendPropertyChanging();
					this._LOCATION_ID = value;
					this.SendPropertyChanged("LOCATION_ID");
					this.OnLOCATION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STORE_STORE_CATEGORY", Storage="_STORE_CATEGORies", ThisKey="STORE_ID", OtherKey="STORE_ID")]
		public EntitySet<STORE_CATEGORY> STORE_CATEGORies
		{
			get
			{
				return this._STORE_CATEGORies;
			}
			set
			{
				this._STORE_CATEGORies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STORE_PERIOD", Storage="_PERIODs", ThisKey="STORE_ID", OtherKey="STORE_ID")]
		public EntitySet<PERIOD> PERIODs
		{
			get
			{
				return this._PERIODs;
			}
			set
			{
				this._PERIODs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STORE_FEEDBACK", Storage="_FEEDBACKs", ThisKey="STORE_ID", OtherKey="STORE_ID")]
		public EntitySet<FEEDBACK> FEEDBACKs
		{
			get
			{
				return this._FEEDBACKs;
			}
			set
			{
				this._FEEDBACKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STORE_DISCOUNT", Storage="_DISCOUNTs", ThisKey="STORE_ID", OtherKey="STORE_ID")]
		public EntitySet<DISCOUNT> DISCOUNTs
		{
			get
			{
				return this._DISCOUNTs;
			}
			set
			{
				this._DISCOUNTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADDRESS_STORE", Storage="_ADDRESS", ThisKey="ADDRESS_ID", OtherKey="ADDRESS_ID", IsForeignKey=true)]
		public ADDRESS ADDRESS
		{
			get
			{
				return this._ADDRESS.Entity;
			}
			set
			{
				ADDRESS previousValue = this._ADDRESS.Entity;
				if (((previousValue != value) 
							|| (this._ADDRESS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADDRESS.Entity = null;
						previousValue.STOREs.Remove(this);
					}
					this._ADDRESS.Entity = value;
					if ((value != null))
					{
						value.STOREs.Add(this);
						this._ADDRESS_ID = value.ADDRESS_ID;
					}
					else
					{
						this._ADDRESS_ID = default(int);
					}
					this.SendPropertyChanged("ADDRESS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_STORE", Storage="_LOCATION", ThisKey="LOCATION_ID", OtherKey="LOCATION_ID", IsForeignKey=true)]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.STOREs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.STOREs.Add(this);
						this._LOCATION_ID = value.LOCATION_ID;
					}
					else
					{
						this._LOCATION_ID = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_STORE", Storage="_USER", ThisKey="OWNER", OtherKey="USER_ID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.STOREs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.STOREs.Add(this);
						this._OWNER = value.USER_ID;
					}
					else
					{
						this._OWNER = default(string);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_STORE_CATEGORies(STORE_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.STORE = this;
		}
		
		private void detach_STORE_CATEGORies(STORE_CATEGORY entity)
		{
			this.SendPropertyChanging();
			entity.STORE = null;
		}
		
		private void attach_PERIODs(PERIOD entity)
		{
			this.SendPropertyChanging();
			entity.STORE = this;
		}
		
		private void detach_PERIODs(PERIOD entity)
		{
			this.SendPropertyChanging();
			entity.STORE = null;
		}
		
		private void attach_FEEDBACKs(FEEDBACK entity)
		{
			this.SendPropertyChanging();
			entity.STORE = this;
		}
		
		private void detach_FEEDBACKs(FEEDBACK entity)
		{
			this.SendPropertyChanging();
			entity.STORE = null;
		}
		
		private void attach_DISCOUNTs(DISCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.STORE = this;
		}
		
		private void detach_DISCOUNTs(DISCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.STORE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DISCOUNT")]
	public partial class DISCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DISCCOUNT_ID;
		
		private int _STORE_ID;
		
		private string _DESCRIPTION;
		
		private System.Nullable<System.TimeSpan> _START_TIME;
		
		private System.Nullable<System.TimeSpan> _END_TIME;
		
		private System.Nullable<System.DateTime> _AVAILABLE_FROM;
		
		private System.Nullable<System.DateTime> _AVAILABLE_TO;
		
		private string _AVAILABLE;
		
		private double _VALUE;
		
		private int _TIMES;
		
		private int _POPULAR;
		
		private EntityRef<STORE> _STORE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDISCCOUNT_IDChanging(int value);
    partial void OnDISCCOUNT_IDChanged();
    partial void OnSTORE_IDChanging(int value);
    partial void OnSTORE_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnSTART_TIMEChanging(System.Nullable<System.TimeSpan> value);
    partial void OnSTART_TIMEChanged();
    partial void OnEND_TIMEChanging(System.Nullable<System.TimeSpan> value);
    partial void OnEND_TIMEChanged();
    partial void OnAVAILABLE_FROMChanging(System.Nullable<System.DateTime> value);
    partial void OnAVAILABLE_FROMChanged();
    partial void OnAVAILABLE_TOChanging(System.Nullable<System.DateTime> value);
    partial void OnAVAILABLE_TOChanged();
    partial void OnAVAILABLEChanging(string value);
    partial void OnAVAILABLEChanged();
    partial void OnVALUEChanging(double value);
    partial void OnVALUEChanged();
    partial void OnTIMESChanging(int value);
    partial void OnTIMESChanged();
    partial void OnPOPULARChanging(int value);
    partial void OnPOPULARChanged();
    #endregion
		
		public DISCOUNT()
		{
			this._STORE = default(EntityRef<STORE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISCCOUNT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DISCCOUNT_ID
		{
			get
			{
				return this._DISCCOUNT_ID;
			}
			set
			{
				if ((this._DISCCOUNT_ID != value))
				{
					this.OnDISCCOUNT_IDChanging(value);
					this.SendPropertyChanging();
					this._DISCCOUNT_ID = value;
					this.SendPropertyChanged("DISCCOUNT_ID");
					this.OnDISCCOUNT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORE_ID", DbType="Int NOT NULL")]
		public int STORE_ID
		{
			get
			{
				return this._STORE_ID;
			}
			set
			{
				if ((this._STORE_ID != value))
				{
					if (this._STORE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTORE_IDChanging(value);
					this.SendPropertyChanging();
					this._STORE_ID = value;
					this.SendPropertyChanged("STORE_ID");
					this.OnSTORE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(4000)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_START_TIME", DbType="Time")]
		public System.Nullable<System.TimeSpan> START_TIME
		{
			get
			{
				return this._START_TIME;
			}
			set
			{
				if ((this._START_TIME != value))
				{
					this.OnSTART_TIMEChanging(value);
					this.SendPropertyChanging();
					this._START_TIME = value;
					this.SendPropertyChanged("START_TIME");
					this.OnSTART_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_END_TIME", DbType="Time")]
		public System.Nullable<System.TimeSpan> END_TIME
		{
			get
			{
				return this._END_TIME;
			}
			set
			{
				if ((this._END_TIME != value))
				{
					this.OnEND_TIMEChanging(value);
					this.SendPropertyChanging();
					this._END_TIME = value;
					this.SendPropertyChanged("END_TIME");
					this.OnEND_TIMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVAILABLE_FROM", DbType="Date")]
		public System.Nullable<System.DateTime> AVAILABLE_FROM
		{
			get
			{
				return this._AVAILABLE_FROM;
			}
			set
			{
				if ((this._AVAILABLE_FROM != value))
				{
					this.OnAVAILABLE_FROMChanging(value);
					this.SendPropertyChanging();
					this._AVAILABLE_FROM = value;
					this.SendPropertyChanged("AVAILABLE_FROM");
					this.OnAVAILABLE_FROMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVAILABLE_TO", DbType="Date")]
		public System.Nullable<System.DateTime> AVAILABLE_TO
		{
			get
			{
				return this._AVAILABLE_TO;
			}
			set
			{
				if ((this._AVAILABLE_TO != value))
				{
					this.OnAVAILABLE_TOChanging(value);
					this.SendPropertyChanging();
					this._AVAILABLE_TO = value;
					this.SendPropertyChanged("AVAILABLE_TO");
					this.OnAVAILABLE_TOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AVAILABLE", DbType="NChar(5) NOT NULL", CanBeNull=false)]
		public string AVAILABLE
		{
			get
			{
				return this._AVAILABLE;
			}
			set
			{
				if ((this._AVAILABLE != value))
				{
					this.OnAVAILABLEChanging(value);
					this.SendPropertyChanging();
					this._AVAILABLE = value;
					this.SendPropertyChanged("AVAILABLE");
					this.OnAVAILABLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VALUE", DbType="Float NOT NULL")]
		public double VALUE
		{
			get
			{
				return this._VALUE;
			}
			set
			{
				if ((this._VALUE != value))
				{
					this.OnVALUEChanging(value);
					this.SendPropertyChanging();
					this._VALUE = value;
					this.SendPropertyChanged("VALUE");
					this.OnVALUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIMES", DbType="Int NOT NULL")]
		public int TIMES
		{
			get
			{
				return this._TIMES;
			}
			set
			{
				if ((this._TIMES != value))
				{
					this.OnTIMESChanging(value);
					this.SendPropertyChanging();
					this._TIMES = value;
					this.SendPropertyChanged("TIMES");
					this.OnTIMESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POPULAR", DbType="Int NOT NULL")]
		public int POPULAR
		{
			get
			{
				return this._POPULAR;
			}
			set
			{
				if ((this._POPULAR != value))
				{
					this.OnPOPULARChanging(value);
					this.SendPropertyChanging();
					this._POPULAR = value;
					this.SendPropertyChanged("POPULAR");
					this.OnPOPULARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STORE_DISCOUNT", Storage="_STORE", ThisKey="STORE_ID", OtherKey="STORE_ID", IsForeignKey=true)]
		public STORE STORE
		{
			get
			{
				return this._STORE.Entity;
			}
			set
			{
				STORE previousValue = this._STORE.Entity;
				if (((previousValue != value) 
							|| (this._STORE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STORE.Entity = null;
						previousValue.DISCOUNTs.Remove(this);
					}
					this._STORE.Entity = value;
					if ((value != null))
					{
						value.DISCOUNTs.Add(this);
						this._STORE_ID = value.STORE_ID;
					}
					else
					{
						this._STORE_ID = default(int);
					}
					this.SendPropertyChanged("STORE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class CATEGORY_VIEWER
	{
		
		private int _CATEGORY_ID;
		
		private string _NAME;
		
		private string _DESCRIPTION;
		
		private int _LAYER;
		
		private int _PARENT;
		
		public CATEGORY_VIEWER()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", DbType="Int NOT NULL")]
		public int CATEGORY_ID
		{
			get
			{
				return this._CATEGORY_ID;
			}
			set
			{
				if ((this._CATEGORY_ID != value))
				{
					this._CATEGORY_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(1000)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this._DESCRIPTION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAYER", DbType="Int NOT NULL")]
		public int LAYER
		{
			get
			{
				return this._LAYER;
			}
			set
			{
				if ((this._LAYER != value))
				{
					this._LAYER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENT", DbType="Int NOT NULL")]
		public int PARENT
		{
			get
			{
				return this._PARENT;
			}
			set
			{
				if ((this._PARENT != value))
				{
					this._PARENT = value;
				}
			}
		}
	}
	
	public partial class STORE_VIEWER
	{
		
		private int _STORE_ID;
		
		private string _NAME;
		
		private string _ADDRESS_LINE;
		
		private string _CITY;
		
		private string _STATE_PROVINCE_REGION;
		
		private string _POSTAL_CODE;
		
		private string _COUNTRY;
		
		private string _PHONE;
		
		private string _WEBSITE;
		
		private double _LATITUDE;
		
		private double _LONGITUDE;
		
		private System.Nullable<double> _Distance;
		
		private int _CATEGORY_ID;
		
		private int _PRICE_LEVEL;
		
		private double _RATING;
		
		private string _PLACE_ID;
		
		private string _DESCRIPTION;
		
		public STORE_VIEWER()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORE_ID", DbType="Int NOT NULL")]
		public int STORE_ID
		{
			get
			{
				return this._STORE_ID;
			}
			set
			{
				if ((this._STORE_ID != value))
				{
					this._STORE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_LINE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ADDRESS_LINE
		{
			get
			{
				return this._ADDRESS_LINE;
			}
			set
			{
				if ((this._ADDRESS_LINE != value))
				{
					this._ADDRESS_LINE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this._CITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_PROVINCE_REGION", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string STATE_PROVINCE_REGION
		{
			get
			{
				return this._STATE_PROVINCE_REGION;
			}
			set
			{
				if ((this._STATE_PROVINCE_REGION != value))
				{
					this._STATE_PROVINCE_REGION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTAL_CODE", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string POSTAL_CODE
		{
			get
			{
				return this._POSTAL_CODE;
			}
			set
			{
				if ((this._POSTAL_CODE != value))
				{
					this._POSTAL_CODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this._COUNTRY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(20)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this._PHONE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEBSITE", DbType="NVarChar(1000)")]
		public string WEBSITE
		{
			get
			{
				return this._WEBSITE;
			}
			set
			{
				if ((this._WEBSITE != value))
				{
					this._WEBSITE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LATITUDE", DbType="Float NOT NULL")]
		public double LATITUDE
		{
			get
			{
				return this._LATITUDE;
			}
			set
			{
				if ((this._LATITUDE != value))
				{
					this._LATITUDE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LONGITUDE", DbType="Float NOT NULL")]
		public double LONGITUDE
		{
			get
			{
				return this._LONGITUDE;
			}
			set
			{
				if ((this._LONGITUDE != value))
				{
					this._LONGITUDE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Float")]
		public System.Nullable<double> Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this._Distance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", DbType="Int NOT NULL")]
		public int CATEGORY_ID
		{
			get
			{
				return this._CATEGORY_ID;
			}
			set
			{
				if ((this._CATEGORY_ID != value))
				{
					this._CATEGORY_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_LEVEL", DbType="Int NOT NULL")]
		public int PRICE_LEVEL
		{
			get
			{
				return this._PRICE_LEVEL;
			}
			set
			{
				if ((this._PRICE_LEVEL != value))
				{
					this._PRICE_LEVEL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATING", DbType="Float NOT NULL")]
		public double RATING
		{
			get
			{
				return this._RATING;
			}
			set
			{
				if ((this._RATING != value))
				{
					this._RATING = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLACE_ID", DbType="NVarChar(50)")]
		public string PLACE_ID
		{
			get
			{
				return this._PLACE_ID;
			}
			set
			{
				if ((this._PLACE_ID != value))
				{
					this._PLACE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(4000)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this._DESCRIPTION = value;
				}
			}
		}
	}
	
	public partial class STORE_INFO
	{
		
		private int _STORE_ID;
		
		private string _OWNER;
		
		private string _NAME;
		
		private string _ADDRESS_LINE;
		
		private string _CITY;
		
		private string _STATE_PROVINCE_REGION;
		
		private string _POSTAL_CODE;
		
		private string _COUNTRY;
		
		private string _PHONE;
		
		private string _WEBSITE;
		
		private double _LATITUDE;
		
		private double _LONGITUDE;
		
		private int _CATEGORY_ID;
		
		private int _PRICE_LEVEL;
		
		private double _RATING;
		
		private string _PLACE_ID;
		
		private string _DESCRIPTION;
		
		public STORE_INFO()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STORE_ID", DbType="Int NOT NULL")]
		public int STORE_ID
		{
			get
			{
				return this._STORE_ID;
			}
			set
			{
				if ((this._STORE_ID != value))
				{
					this._STORE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OWNER", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OWNER
		{
			get
			{
				return this._OWNER;
			}
			set
			{
				if ((this._OWNER != value))
				{
					this._OWNER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this._NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS_LINE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ADDRESS_LINE
		{
			get
			{
				return this._ADDRESS_LINE;
			}
			set
			{
				if ((this._ADDRESS_LINE != value))
				{
					this._ADDRESS_LINE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this._CITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_PROVINCE_REGION", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string STATE_PROVINCE_REGION
		{
			get
			{
				return this._STATE_PROVINCE_REGION;
			}
			set
			{
				if ((this._STATE_PROVINCE_REGION != value))
				{
					this._STATE_PROVINCE_REGION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTAL_CODE", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string POSTAL_CODE
		{
			get
			{
				return this._POSTAL_CODE;
			}
			set
			{
				if ((this._POSTAL_CODE != value))
				{
					this._POSTAL_CODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this._COUNTRY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="NVarChar(20)")]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this._PHONE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEBSITE", DbType="NVarChar(1000)")]
		public string WEBSITE
		{
			get
			{
				return this._WEBSITE;
			}
			set
			{
				if ((this._WEBSITE != value))
				{
					this._WEBSITE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LATITUDE", DbType="Float NOT NULL")]
		public double LATITUDE
		{
			get
			{
				return this._LATITUDE;
			}
			set
			{
				if ((this._LATITUDE != value))
				{
					this._LATITUDE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LONGITUDE", DbType="Float NOT NULL")]
		public double LONGITUDE
		{
			get
			{
				return this._LONGITUDE;
			}
			set
			{
				if ((this._LONGITUDE != value))
				{
					this._LONGITUDE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", DbType="Int NOT NULL")]
		public int CATEGORY_ID
		{
			get
			{
				return this._CATEGORY_ID;
			}
			set
			{
				if ((this._CATEGORY_ID != value))
				{
					this._CATEGORY_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_LEVEL", DbType="Int NOT NULL")]
		public int PRICE_LEVEL
		{
			get
			{
				return this._PRICE_LEVEL;
			}
			set
			{
				if ((this._PRICE_LEVEL != value))
				{
					this._PRICE_LEVEL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATING", DbType="Float NOT NULL")]
		public double RATING
		{
			get
			{
				return this._RATING;
			}
			set
			{
				if ((this._RATING != value))
				{
					this._RATING = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLACE_ID", DbType="NVarChar(50)")]
		public string PLACE_ID
		{
			get
			{
				return this._PLACE_ID;
			}
			set
			{
				if ((this._PLACE_ID != value))
				{
					this._PLACE_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(4000)")]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this._DESCRIPTION = value;
				}
			}
		}
	}
	
	public partial class USER_VIEWER
	{
		
		private string _USER_ID;
		
		private string _FIRST_NAME;
		
		private string _LAST_NAME;
		
		private string _EMAIL;
		
		private string _PASSWORD;
		
		private string _ROLE;
		
		private string _FACEBOOK_NAME;
		
		private System.DateTime _REGISTER_DATE;
		
		public USER_VIEWER()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this._USER_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FIRST_NAME
		{
			get
			{
				return this._FIRST_NAME;
			}
			set
			{
				if ((this._FIRST_NAME != value))
				{
					this._FIRST_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LAST_NAME
		{
			get
			{
				return this._LAST_NAME;
			}
			set
			{
				if ((this._LAST_NAME != value))
				{
					this._LAST_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this._EMAIL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this._PASSWORD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ROLE
		{
			get
			{
				return this._ROLE;
			}
			set
			{
				if ((this._ROLE != value))
				{
					this._ROLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACEBOOK_NAME", DbType="NVarChar(100)")]
		public string FACEBOOK_NAME
		{
			get
			{
				return this._FACEBOOK_NAME;
			}
			set
			{
				if ((this._FACEBOOK_NAME != value))
				{
					this._FACEBOOK_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGISTER_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime REGISTER_DATE
		{
			get
			{
				return this._REGISTER_DATE;
			}
			set
			{
				if ((this._REGISTER_DATE != value))
				{
					this._REGISTER_DATE = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
